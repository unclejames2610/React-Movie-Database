{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","images/search-icon.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","GlobalStyle.js","App.js","index.js","images/no_image.jpg"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Content","_templateObject2","LogoImg","img","_templateObject3","TMDBLogoImg","_templateObject4","Header","react_default","a","createElement","react_router_dom","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","concat","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","HeroImage_styles_templateObject","_ref","image","HeroImage_styles_templateObject2","Text","HeroImage_styles_templateObject3","HeroImage","title","text","HeroImage_styles_Wrapper","HeroImage_styles_Content","Grid_styles_templateObject","Grid_styles_templateObject2","Grid","header","children","Grid_styles_Wrapper","Grid_styles_Content","Image","Thumb_styles_templateObject","Thumb","movieId","clickable","Spinner","Spinner_styles_templateObject","SearchBar_styles_templateObject","SearchBar_styles_templateObject2","SearchBar","setSearchTerm","_useState","useState","_useState2","slicedToArray","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchBar_styles_Wrapper","SearchBar_styles_Content","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button_styles_templateObject","Button","callback","Button_styles_Wrapper","onClick","defaultConfig","method","headers","Content-Type","apiSettings","fetchMovies","_fetchMovies","asyncToGenerator","_regeneratorRuntime","mark","_callee","searchTerm","page","endpoint","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","_x2","apply","this","arguments","fetchMovie","_fetchMovie","_callee2","_context2","_x3","fetchCredits","_fetchCredits","_callee3","creditsEndpoint","_context3","_x4","getRequestToken","_getRequestToken","_callee4","reqToken","_context4","request_token","authenticate","_authenticate","_callee5","requestToken","username","password","bodyData","sessionId","_context5","objectSpread","body","JSON","stringify","success","_x5","_x6","_x7","rateMovie","_rateMovie","_callee6","rating","_context6","_x8","_x9","_x10","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","_useHomeFetch","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useState9","_useState10","isLoadingMore","setIsLoadingMore","useHomeFetch_regeneratorRuntime","movies","_args","length","undefined","API","toConsumableArray","t0","console","log","setItem","useHomeFetch","Fragment","components_HeroImage","backdrop_path","original_title","overview","components_SearchBar","components_Grid","map","movie","components_Thumb","key","id","poster_path","NoImage","components_Spinner","components_Button","BreadCrumb_styles_templateObject","BreadCrumb_styles_templateObject2","BreadCrumb","movieTitle","BreadCrumb_styles_Wrapper","BreadCrumb_styles_Content","className","MovieInfo_styles_templateObject","backdrop","MovieInfo_styles_templateObject2","MovieInfo_styles_templateObject3","MovieInfo","MovieInfo_styles_Wrapper","MovieInfo_styles_Content","MovieInfo_styles_Text","vote_average","directors","director","credit_id","name","MovieInfoBar_styles_templateObject","MovieInfoBar_styles_templateObject2","MovieInfoBar","time","budget","revenue","MovieInfoBar_styles_Wrapper","MovieInfoBar_styles_Content","hours","Math","floor","mins","calcTime","Actor_styles_templateObject","Actor_styles_templateObject2","Actor","character","imageUrl","Actor_styles_Wrapper","Actor_styles_Image","Movie","_useMovieFetch","useMovieFetch_regeneratorRuntime","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","components_BreadCrumb","components_MovieInfo","components_MovieInfoBar","runtime","actor","components_Actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","App","components_Header","react_router","path","element","components_Home","components_Movie","components_NotFound","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mPCE3BC,EAAUC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,oEAMPE,EAAUL,IAAOC,IAAVK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,yKASPI,EAAUP,IAAOQ,IAAVC,MAAAN,OAAAC,EAAA,EAAAD,CAAA,wGAQPO,EAAcV,IAAOQ,IAAVG,MAAAR,OAAAC,EAAA,EAAAD,CAAA,uGCNTS,EAXA,kBACbC,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACV,EAAD,KACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KACPJ,EAAAC,EAAAC,cAACR,EAAD,CAASW,IAAKC,IAAUC,IAAI,eAE9BP,EAAAC,EAAAC,cAACL,EAAD,CAAaQ,IAAKG,IAAUD,IAAI,iBCXhCE,EAAU,gCACVC,EAAUC,mCAEVC,EAAe,GAAAC,OAAMJ,EAAN,yBAAAI,OAAqCH,EAArC,0BACfI,EAAgB,GAAAD,OAAMJ,EAAN,0BAAAI,OAAsCH,EAAtC,mBAEhBK,EAAiB,GAAAF,OAAMJ,EAAN,qCAAAI,OAAiDH,GAClEM,EAAS,GAAAH,OAAMJ,EAAN,qDAAAI,OAAiEH,GAC1EO,EAAc,GAAAJ,OAAMJ,EAAN,uCAAAI,OAAmDH,GAEjEQ,EAAiB,6BCXVhC,EAAUC,IAAOC,IAAV+B,MAAA7B,OAAAC,EAAA,EAAAD,CAAA,kaAMV,SAAA8B,GAAA,OAAAA,EAAGC,QAiBA7B,EAAUL,IAAOC,IAAVkC,MAAAhC,OAAAC,EAAA,EAAAD,CAAA,8EAMPiC,EAAOpC,IAAOC,IAAVoC,MAAAlC,OAAAC,EAAA,EAAAD,CAAA,qeCTFmC,EAjBG,SAAAL,GAAA,IAAGC,EAAHD,EAAGC,MAAOK,EAAVN,EAAUM,MAAOC,EAAjBP,EAAiBO,KAAjB,OAChB3B,EAAAC,EAAAC,cAAC0B,EAAD,CAASP,MAAOA,GACdrB,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAAA,UAAKwB,GACL1B,EAAAC,EAAAC,cAAA,SAAIyB,OCRCzC,EAAUC,IAAOC,IAAV0C,MAAAxC,OAAAC,EAAA,EAAAD,CAAA,kNAcPE,EAAUL,IAAOC,IAAV2C,MAAAzC,OAAAC,EAAA,EAAAD,CAAA,iHCAL0C,EAXF,SAAAZ,GAAA,IAAGa,EAAHb,EAAGa,OAAQC,EAAXd,EAAWc,SAAX,OACXlC,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAAA,UAAK+B,GACLjC,EAAAC,EAAAC,cAACkC,EAAD,KAAUF,KCNDG,EAAQlD,IAAOQ,IAAV2C,MAAAhD,OAAAC,EAAA,EAAAD,CAAA,2SCsBHiD,EAlBD,SAAAnB,GAAA,IAAGC,EAAHD,EAAGC,MAAOmB,EAAVpB,EAAUoB,QAASC,EAAnBrB,EAAmBqB,UAAnB,OACZzC,EAAAC,EAAAC,cAAA,WACGuC,EACCzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,IAAAS,OAAM2B,IACZxC,EAAAC,EAAAC,cAACmC,EAAD,CAAOhC,IAAKgB,EAAOd,IAAI,iBAGzBP,EAAAC,EAAAC,cAACmC,EAAD,CAAOhC,IAAKgB,EAAOd,IAAI,kBCXdmC,ECAQvD,IAAOC,IAAVuD,MAAArD,OAAAC,EAAA,EAAAD,CAAA,4WCAPJ,GAAUC,IAAOC,IAAVwD,MAAAtD,OAAAC,EAAA,EAAAD,CAAA,yHAQPE,GAAUL,IAAOC,IAAVyD,MAAAvD,OAAAC,EAAA,EAAAD,CAAA,ojBCiCLwD,GArCG,SAAA1B,GAAuB,IAApB2B,EAAoB3B,EAApB2B,cAAoBC,EACbC,mBAAS,IADIC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA0D,EAAA,GAChCI,EADgCF,EAAA,GACzBG,EADyBH,EAAA,GAEjCI,EAAUC,kBAAO,GAgBvB,OAdAC,oBAAU,WACJF,EAAQG,UACVH,EAAQG,SAAU,KAKtBD,oBAAU,WACR,IAAME,EAAQC,WAAW,WACvBZ,EAAcK,IACb,KAEH,OAAO,kBAAMQ,aAAaF,KACzB,CAACX,EAAeK,IAEjBpD,EAAAC,EAAAC,cAAC2D,GAAD,KACE7D,EAAAC,EAAAC,cAAC4D,GAAD,KACE9D,EAAAC,EAAAC,cAAA,OAAKG,IAAK0D,KAAYxD,IAAI,gBAC1BP,EAAAC,EAAAC,cAAA,SACE8D,KAAK,OACLC,YAAY,eACZC,SAAU,SAACC,GAAD,OAAWd,EAASc,EAAMC,cAAcC,QAClDA,MAAOjB,OC9BJlE,GAAUC,IAAOmF,OAAVC,MAAAjF,OAAAC,EAAA,EAAAD,CAAA,+TCcLkF,GAXA,SAAApD,GAAA,IAAGO,EAAHP,EAAGO,KAAM8C,EAATrD,EAASqD,SAAT,OACbzE,EAAAC,EAAAC,cAACwE,GAAD,CAASV,KAAK,SAASW,QAASF,GAC7B9C,gzMCGL,IAAMiD,GAAgB,CACpBC,OAAQ,OACRC,QAAS,CACPC,eAAgB,qBA8DLC,GA1DK,CAClBC,YAAW,eAAAC,EAAA5F,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAAC,EAAOC,EAAYC,GAAnB,IAAAC,EAAA,OAAAL,KAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLJ,EAAWF,EAAU,GAAA1E,OACpBD,GADoBC,OACF0E,EADE,UAAA1E,OACiB2E,GADjB,GAAA3E,OAEpBC,EAFoB,UAAAD,OAEK2E,GAHrBG,EAAAE,KAAA,EAISC,MAAML,GAJf,cAAAE,EAAAE,KAAA,EAAAF,EAAAI,KAI0BC,OAJ1B,cAAAL,EAAAM,OAAA,SAAAN,EAAAI,MAAA,wBAAAJ,EAAAO,SAAAZ,MAAF,gBAAAa,EAAAC,GAAA,OAAAlB,EAAAmB,MAAAC,KAAAC,YAAA,GAMXC,WAAU,eAAAC,EAAAnH,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAAqB,EAAMlE,GAAN,IAAAiD,EAAA,OAAAL,KAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cACJJ,EADI,GAAA5E,OACUJ,EADV,UAAAI,OAC0B2B,EAD1B,aAAA3B,OAC6CH,GAD7CiG,EAAAd,KAAA,EAEUC,MAAML,GAFhB,cAAAkB,EAAAd,KAAA,EAAAc,EAAAZ,KAE2BC,OAF3B,cAAAW,EAAAV,OAAA,SAAAU,EAAAZ,MAAA,wBAAAY,EAAAT,SAAAQ,MAAF,gBAAAE,GAAA,OAAAH,EAAAJ,MAAAC,KAAAC,YAAA,GAIVM,aAAY,eAAAC,EAAAxH,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAA0B,EAAMvE,GAAN,IAAAwE,EAAA,OAAA5B,KAAAM,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cACNmB,EADM,GAAAnG,OACeJ,EADf,UAAAI,OAC+B2B,EAD/B,qBAAA3B,OAC0DH,GAD1DuG,EAAApB,KAAA,EAEQC,MAAMkB,GAFd,cAAAC,EAAApB,KAAA,EAAAoB,EAAAlB,KAEgCC,OAFhC,cAAAiB,EAAAhB,OAAA,SAAAgB,EAAAlB,MAAA,wBAAAkB,EAAAf,SAAAa,MAAF,gBAAAG,GAAA,OAAAJ,EAAAT,MAAAC,KAAAC,YAAA,GAKZY,gBAAe,eAAAC,EAAA9H,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAAgC,IAAA,IAAAC,EAAA,OAAAlC,KAAAM,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACeC,MAAM/E,GADrB,cAAAwG,EAAA1B,KAAA,EAAA0B,EAAAxB,KACyCC,OADzC,cACTsB,EADSC,EAAAxB,KAAAwB,EAAAtB,OAAA,SAERqB,EAASE,eAFD,wBAAAD,EAAArB,SAAAmB,MAAF,yBAAAD,EAAAf,MAAAC,KAAAC,YAAA,GAIfkB,aAAY,eAAAC,EAAApI,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAAsC,EAAOC,EAAcC,EAAUC,GAA/B,IAAAC,EAAAC,EAAA,OAAA5C,KAAAM,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cACNkC,EAAW,CACfF,WACAC,WACAN,cAAeI,GAJLK,EAAApC,KAAA,EAQJC,MAAM9E,EAAD1B,OAAA4I,GAAA,EAAA5I,CAAA,GACNsF,GADM,CAETuD,KAAMC,KAAKC,UAAUN,MAVb,cAAAE,EAAApC,KAAA,EAAAoC,EAAAlC,KAYVC,OAZU,WAAAiC,EAAAlC,KAcHuC,QAdG,CAAAL,EAAApC,KAAA,gBAAAoC,EAAApC,KAAA,EAgBFC,MAAM7E,EAAD3B,OAAA4I,GAAA,EAAA5I,CAAA,GACNsF,GADM,CAETuD,KAAMC,KAAKC,UAAU,CAAEb,cAAeI,OAlBhC,cAAAK,EAAApC,KAAA,GAAAoC,EAAAlC,KAoBRC,OApBQ,eAeJgC,EAfIC,EAAAlC,KAAAkC,EAAAhC,OAAA,SAqBH+B,GArBG,yBAAAC,EAAA/B,SAAAyB,MAAF,gBAAAY,EAAAC,EAAAC,GAAA,OAAAf,EAAArB,MAAAC,KAAAC,YAAA,GAwBZmC,UAAS,eAAAC,EAAArJ,OAAA6F,GAAA,EAAA7F,CAAA8F,KAAAC,KAAE,SAAAuD,EAAOZ,EAAWxF,EAAS6B,GAA3B,IAAAoB,EAAAoD,EAAA,OAAAzD,KAAAM,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cACHJ,EADG,GAAA5E,OACWJ,EADX,UAAAI,OAC2B2B,EAD3B,oBAAA3B,OACqDH,EADrD,gBAAAG,OAC2EmH,GAD3Ec,EAAAjD,KAAA,EAIDC,MAAML,EAADnG,OAAA4I,GAAA,EAAA5I,CAAA,GACNsF,GADM,CAETuD,KAAMC,KAAKC,UAAU,CAAEhE,aANlB,cAAAyE,EAAAjD,KAAA,EAAAiD,EAAA/C,KAQPC,OARO,cAGH6C,EAHGC,EAAA/C,KAAA+C,EAAA7C,OAAA,SAUF4C,GAVE,wBAAAC,EAAA5C,SAAA0C,MAAF,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAtC,MAAAC,KAAAC,YAAA,ICtDE2C,GAAe,SAACC,GAM3B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,IAGbO,GAAmB,SAACC,GAC/B,IAAMC,EAAeC,eAAeC,QAAQH,GAC5C,OAAOC,GAAgBxB,KAAK2B,MAAMH,uxMCbpC,+BAAMI,GAAe,CACnBxE,KAAM,EACNyE,QAAS,GACTC,YAAa,EACbC,cAAe,sBCmDFC,GAxCF,WAAM,IAAAC,EDRS,WAAM,IAAArH,EACIC,mBAAS,IADbC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA0D,EAAA,GACzBuC,EADyBrC,EAAA,GACbH,EADaG,EAAA,GAAAoH,EAENrH,mBAAS+G,IAFHO,EAAAjL,OAAA6D,EAAA,EAAA7D,CAAAgL,EAAA,GAEzBlH,EAFyBmH,EAAA,GAElBlH,EAFkBkH,EAAA,GAAAC,EAGFvH,oBAAS,GAHPwH,EAAAnL,OAAA6D,EAAA,EAAA7D,CAAAkL,EAAA,GAGzBE,EAHyBD,EAAA,GAGhBE,EAHgBF,EAAA,GAAAG,EAIN3H,oBAAS,GAJH4H,EAAAvL,OAAA6D,EAAA,EAAA7D,CAAAsL,EAAA,GAIzBE,EAJyBD,EAAA,GAIlBE,EAJkBF,EAAA,GAAAG,EAKU/H,oBAAS,GALnBgI,EAAA3L,OAAA6D,EAAA,EAAA7D,CAAA0L,EAAA,GAKzBE,EALyBD,EAAA,GAKVE,EALUF,EAAA,GAO1BhG,EAAW,eAAA7D,EAAA9B,OAAA6F,GAAA,EAAA7F,CAAA8L,KAAA/F,KAAG,SAAAC,EAAOE,GAAP,IAAAD,EAAA8F,EAAAC,EAAA/E,UAAA,OAAA6E,KAAA1F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAaN,EAAb+F,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAA0B,GAA1B3F,EAAAC,KAAA,EAEhBmF,GAAS,GACTJ,GAAW,GAHKhF,EAAAE,KAAA,EAKK4F,GAAIxG,YAAYM,EAAYC,GALjC,OAKV6F,EALU1F,EAAAI,KAShB1C,EAAS,SAACuC,GAAD,OAAAtG,OAAA4I,GAAA,EAAA5I,CAAA,GACJ+L,EADI,CAEPpB,QACEzE,EAAO,EAAP,GAAA3E,OAAAvB,OAAAoM,GAAA,EAAApM,CAAesG,EAAKqE,SAApB3K,OAAAoM,GAAA,EAAApM,CAAgC+L,EAAOpB,UAAvC3K,OAAAoM,GAAA,EAAApM,CAAsD+L,EAAOpB,aAZjDtE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAehBoF,GAAS,GAfO,QAiBlBJ,GAAW,GAjBO,yBAAAhF,EAAAO,SAAAZ,EAAA,kBAAH,gBAAAa,GAAA,OAAA/E,EAAAiF,MAAAC,KAAAC,YAAA,GAgDjB,OA3BA/C,oBAAU,WACR,IAAK+B,EAAY,CACf,IAAMqE,EAAeF,GAAiB,aAEtC,GAAIE,EAGF,OAFAgC,QAAQC,IAAI,qCACZxI,EAASuG,GAIbgC,QAAQC,IAAI,qBACZxI,EAAS2G,IACT/E,EAAY,EAAGM,IACd,CAACA,IAEJ/B,oBAAU,WACH0H,IAELjG,EAAY7B,EAAMoC,KAAO,EAAGD,GAC5B4F,GAAiB,KAChB,CAACD,EAAe3F,EAAYnC,EAAMoC,OAGrChC,oBAAU,WACH+B,GAAYsE,eAAeiC,QAAQ,YAAa1D,KAAKC,UAAUjF,KACnE,CAACmC,EAAYnC,IAET,CAAEA,QAAOsH,UAASI,QAAOvF,aAAYxC,gBAAeoI,oBC7CzDY,GADM3I,EADSiH,EACTjH,MAAOsH,EADEL,EACFK,QAASI,EADPT,EACOS,MAAOvF,EADd8E,EACc9E,WAAYxC,EAD1BsH,EAC0BtH,cAAeoI,EADzCd,EACyCc,iBAI1D,OAFAS,QAAQC,IAAIzI,GAER0H,EAAc9K,EAAAC,EAAAC,cAAA,sCAEhBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+L,SAAA,MACIzG,GAAcnC,EAAM6G,QAAQ,GAC5BjK,EAAAC,EAAAC,cAAC+L,EAAD,CACE5K,MAAK,GAAAR,OAAKK,GAALL,OhBfO,SgBePA,OAAsCuC,EAAM6G,QAAQ,GAAGiC,eAC5DxK,MAAO0B,EAAM6G,QAAQ,GAAGkC,eACxBxK,KAAMyB,EAAM6G,QAAQ,GAAGmC,WAEvB,KAEJpM,EAAAC,EAAAC,cAACmM,GAAD,CAAWtJ,cAAeA,IAE1B/C,EAAAC,EAAAC,cAACoM,EAAD,CAAMrK,OAAQsD,EAAa,gBAAkB,kBAC1CnC,EAAM6G,QAAQsC,IAAI,SAACC,GAAD,OACjBxM,EAAAC,EAAAC,cAACuM,EAAD,CACEC,IAAKF,EAAMG,GACXlK,WAAS,EACTpB,MACEmL,EAAMI,YACF1L,EhB5BE,OgB4B6BsL,EAAMI,YACrCC,KAENrK,QAASgK,EAAMG,QAIpBjC,GAAW1K,EAAAC,EAAAC,cAAC4M,EAAD,MACX1J,EAAMoC,KAAOpC,EAAM8G,cAAgBQ,GAClC1K,EAAAC,EAAAC,cAAC6M,GAAD,CAAQpL,KAAK,YAAY8C,SAAU,kBAAM0G,GAAiB,QCpDrDjM,GAAUC,IAAOC,IAAV4N,QAAA1N,OAAAC,EAAA,EAAAD,CAAA,wKAUPE,GAAUL,IAAOC,IAAV6N,QAAA3N,OAAAC,EAAA,EAAAD,CAAA,2UCUL4N,GAhBI,SAAA9L,GAAA,IAAG+L,EAAH/L,EAAG+L,WAAH,OACjBnN,EAAAC,EAAAC,cAACkN,GAAD,KACEpN,EAAAC,EAAAC,cAACmN,GAAD,KACErN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,IAAIkN,UAAU,QACrBtN,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,YAAOiN,MCTAjO,GAAUC,IAAOC,IAAVmO,QAAAjO,OAAAC,EAAA,EAAAD,CAAA,oQACJ,SAAA8B,GAAA,IAAGoM,EAAHpM,EAAGoM,SAAH,OACZA,EAAQ,OAAA3M,OAAUK,GAAVL,OnBSU,SmBTVA,OAA2C2M,EAA3C,KAAyD,SAgBxDhO,GAAUL,IAAOC,IAAVqO,QAAAnO,OAAAC,EAAA,EAAAD,CAAA,sOAaPiC,GAAOpC,IAAOC,IAAVsO,QAAApO,OAAAC,EAAA,EAAAD,CAAA,4mBCaFqO,GArCG,SAAAvM,GAAA,IAAGoL,EAAHpL,EAAGoL,MAAH,OAChBxM,EAAAC,EAAAC,cAAC0N,GAAD,CAASJ,SAAUhB,EAAMN,eACvBlM,EAAAC,EAAAC,cAAC2N,GAAD,KACE7N,EAAAC,EAAAC,cAACuM,EAAD,CACEpL,MACEmL,EAAMI,YAAN,GAAA/L,OACOK,GADPL,OpBCU,QoBDVA,OACsC2L,EAAMI,aACxCC,KAENpK,WAAW,IAEbzC,EAAAC,EAAAC,cAAC4N,GAAD,KACE9N,EAAAC,EAAAC,cAAA,UAAKsM,EAAM9K,OACX1B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAIsM,EAAMJ,UAEVpM,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,oBACbtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,SAASd,EAAMuB,eAEhC/N,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,YACbtN,EAAAC,EAAAC,cAAA,qBAAasM,EAAMwB,UAAUzC,OAAS,EAAI,IAAM,IAC/CiB,EAAMwB,UAAUzB,IAAI,SAAC0B,GAAD,OACnBjO,EAAAC,EAAAC,cAAA,KAAGwM,IAAKuB,EAASC,WAAYD,EAASE,KAAtC,aCjCDjP,GAAUC,IAAOC,IAAVgP,QAAA9O,OAAAC,EAAA,EAAAD,CAAA,8HAQPE,GAAUL,IAAOC,IAAViP,QAAA/O,OAAAC,EAAA,EAAAD,CAAA,yfCmBLgP,GAtBM,SAAAlN,GAAA,IAAGmN,EAAHnN,EAAGmN,KAAMC,EAATpN,EAASoN,OAAQC,EAAjBrN,EAAiBqN,QAAjB,OACnBzO,EAAAC,EAAAC,cAACwO,GAAD,KACE1O,EAAAC,EAAAC,cAACyO,GAAD,KACE3O,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,UACbtN,EAAAC,EAAAC,cAAA,0BRVgB,SAACqO,GACvB,IAAMK,EAAQC,KAAKC,MAAMP,EAAO,IAC1BQ,EAAOR,EAAO,GACpB,SAAA1N,OAAU+N,EAAV,MAAA/N,OAAoBkO,EAApB,KQOwBC,CAAST,KAE7BvO,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,UACbtN,EAAAC,EAAAC,cAAA,oBAAYgJ,GAAasF,KAE3BxO,EAAAC,EAAAC,cAAA,OAAKoN,UAAU,UACbtN,EAAAC,EAAAC,cAAA,qBAAagJ,GAAauF,QCfrBvP,GAAUC,IAAOC,IAAV6P,QAAA3P,OAAAC,EAAA,EAAAD,CAAA,6NAiBP+C,GAAQlD,IAAOQ,IAAVuP,QAAA5P,OAAAC,EAAA,EAAAD,CAAA,6GCDH6P,GAbD,SAAA/N,GAAA,IAAG+M,EAAH/M,EAAG+M,KAAMiB,EAAThO,EAASgO,UAAWC,EAApBjO,EAAoBiO,SAApB,OACZrP,EAAAC,EAAAC,cAACoP,GAAD,KACEtP,EAAAC,EAAAC,cAACqP,GAAD,CAAOlP,IAAKgP,EAAU9O,IAAI,gBAC1BP,EAAAC,EAAAC,cAAA,UAAKiO,GACLnO,EAAAC,EAAAC,cAAA,SAAIkP,wxMCJD,OC6CQI,GAjCD,WAAM,IAAAC,EDZS,SAACjN,GAAY,IAAAQ,EACdC,mBAAS,IADKC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA0D,EAAA,GACjCI,EADiCF,EAAA,GAC1BG,EAD0BH,EAAA,GAAAoH,EAEVrH,oBAAS,GAFCsH,EAAAjL,OAAA6D,EAAA,EAAA7D,CAAAgL,EAAA,GAEjCI,EAFiCH,EAAA,GAExBI,EAFwBJ,EAAA,GAAAC,EAGdvH,oBAAS,GAHKwH,EAAAnL,OAAA6D,EAAA,EAAA7D,CAAAkL,EAAA,GAGjCM,EAHiCL,EAAA,GAG1BM,EAH0BN,EAAA,GA+CxC,OA1CAjH,oBAAU,WACR,IAAMgD,EAAU,eAAApF,EAAA9B,OAAA6F,GAAA,EAAA7F,CAAAoQ,KAAArK,KAAG,SAAAC,IAAA,IAAAkH,EAAAmD,EAAA3B,EAAA,OAAA0B,KAAAhK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEf+E,GAAW,GACXI,GAAS,GAHMpF,EAAAE,KAAA,EAKK4F,GAAIjF,WAAWhE,GALpB,cAKTgK,EALS7G,EAAAI,KAAAJ,EAAAE,KAAA,EAMO4F,GAAI5E,aAAarE,GANxB,OAMTmN,EANShK,EAAAI,KAQTiI,EAAY2B,EAAQC,KAAKC,OAC7B,SAACC,GAAD,MAA2B,aAAfA,EAAOC,MAGrB1M,EAAS/D,OAAA4I,GAAA,EAAA5I,CAAA,GACJkN,EADG,CAENwD,OAAQL,EAAQM,KAChBjC,eAGFrD,GAAW,GAlBIhF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAoBfoF,GAAS,GApBM,yBAAApF,EAAAO,SAAAZ,EAAA,kBAAH,yBAAAlE,EAAAiF,MAAAC,KAAAC,YAAA,GAwBVqD,EAAeF,GAAiBlH,GAEtC,GAAIoH,EAGF,OAFAvG,EAASuG,QACTe,GAAW,GAIbnE,KACC,CAAChE,IAIJgB,oBAAU,WACRqG,eAAeiC,QAAQtJ,EAAS4F,KAAKC,UAAUjF,KAC9C,CAACZ,EAASY,IAEN,CAAEA,QAAOsH,UAASI,SCjCgBoF,CADrBC,cAAZ3N,SACOgK,EAFGiD,EAEVrM,MAAcsH,EAFJ+E,EAEI/E,QAASI,EAFb2E,EAEa3E,MAE/B,OAAIJ,EAAgB1K,EAAAC,EAAAC,cAAC4M,EAAD,MAChBhC,EAAc9K,EAAAC,EAAAC,cAAA,sCAEhBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+L,SAAA,KACEhM,EAAAC,EAAAC,cAACkQ,GAAD,CAAYjD,WAAYX,EAAML,iBAC9BnM,EAAAC,EAAAC,cAACmQ,GAAD,CAAW7D,MAAOA,IAClBxM,EAAAC,EAAAC,cAACoQ,GAAD,CACE/B,KAAM/B,EAAM+D,QACZ/B,OAAQhC,EAAMgC,OACdC,QAASjC,EAAMiC,UAEjBzO,EAAAC,EAAAC,cAACoM,EAAD,CAAMrK,OAAO,UACVuK,EAAMwD,OAAOzD,IAAI,SAACiE,GAAD,OAChBxQ,EAAAC,EAAAC,cAACuQ,GAAD,CACE/D,IAAK8D,EAAMtC,UACXC,KAAMqC,EAAMrC,KACZiB,UAAWoB,EAAMpB,UACjBC,SACEmB,EAAME,aAAN,GAAA7P,OACOK,GADPL,O1BtBM,Q0BsBNA,OACsC2P,EAAME,cACxC7D,YCrCH8D,GAFE,kBAAM3Q,EAAAC,EAAAC,cAAA,wBCAV0Q,GAAcC,YAAHC,QAAAxR,OAAAC,EAAA,EAAAD,CAAA,2uBCqBTyR,GAZH,kBACV/Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC8Q,EAAD,MACAhR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,KACEjR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASnR,EAAAC,EAAAC,cAACkR,GAAD,QACzBpR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,YAAYC,QAASnR,EAAAC,EAAAC,cAACmR,GAAD,QACjCrR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,KAAKC,QAASnR,EAAAC,EAAAC,cAACoR,GAAD,SAE5BtR,EAAAC,EAAAC,cAAC0Q,GAAD,QCfJW,IAASC,OACPxR,EAAAC,EAAAC,cAACF,EAAAC,EAAMwR,WAAP,KACEzR,EAAAC,EAAAC,cAACwR,GAAD,OAEFC,SAASC,eAAe,4BCR1B9S,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.f61b6981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-movie-logo.5de5919a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-icon.80e9d8a2.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width: 500px){\r\n        width: 80px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n      </Link>\r\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  // background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 400px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2 rem;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => (\r\n  <Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nGrid.propTypes = {\r\n  header: PropTypes.string,\r\n};\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 180px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Image } from \"./Thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n  <div>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <Image src={image} alt=\"movie-thumb\" />\r\n      </Link>\r\n    ) : (\r\n      <Image src={image} alt=\"movie-thumb\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumb;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 60px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 25px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 25px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 5px;\r\n    width: 15px;\r\n  }\r\n\r\n  input {\r\n    font-size: 13px;\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 0px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 25px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt=\"search-icon\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movie\"\r\n          onChange={(event) => setState(event.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 15%;\r\n  min-width: 200px;\r\n  height: 40px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: 20px;\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n  <Wrapper type=\"button\" onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\r\n//API\r\nimport API from \"../API\";\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n      // console.log(process.env.REACT_APP_API_KEY);\r\n      // console.log(movies);\r\n\r\n      setState((prev) => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  //Initial and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState(\"homeState\");\r\n\r\n      if (sessionState) {\r\n        console.log(\"Grabbing from sessionStorage\");\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"Grabbing from API\");\r\n    setState(initialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n  //Load More\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  //Write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n  }, [searchTerm, state]);\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n};\r\n","import React from \"react\";\r\n\r\n//config\r\n\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config.js\";\r\n\r\n//Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//hooks\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n//image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } =\r\n    useHomeFetch();\r\n  console.log(state);\r\n\r\n  if (error) return <div>Something went wrong...</div>;\r\n  return (\r\n    <>\r\n      {!searchTerm && state.results[0] ? (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      ) : null}\r\n\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n\r\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 50px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n\r\n  .link {\r\n    text-decoration: none;\r\n  }\r\n\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\" className=\"link\">\r\n        <span>Home</span>\r\n      </Link>\r\n      <span>|</span>\r\n      <span>{movieTitle}</span>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n  movieTitle: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import styled from \"styled-components\";\r\n\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify_content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n    font-size: 13px;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//components\r\nimport Thumb from \"../Thumb\";\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n//Image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n//styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumb\r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : NoImage\r\n        }\r\n        clickable={false}\r\n      />\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n\r\n        <div className=\"rating-directors\">\r\n          <div>\r\n            <h3>RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n            {movie.directors.map((director) => (\r\n              <p key={director.credit_id}>{director.name} </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//Helpers\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\n//styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <div className=\"column\">\r\n        <p>Running time: {calcTime(time)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Budget: {convertMoney(budget)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Revenue: {convertMoney(revenue)}</p>\r\n      </div>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  margin: 10px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//styles\r\nimport { Wrapper, Image } from \"./Actor.styles\";\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n  <Wrapper>\r\n    <Image src={imageUrl} alt=\"actor-thumb\" />\r\n    <h3>{name}</h3>\r\n    <p>{character}</p>\r\n  </Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n};\r\nexport default Actor;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../API\";\r\n//helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n        //Get directors only\r\n        const directors = credits.crew.filter(\r\n          (member) => member.job === \"Director\"\r\n        );\r\n\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  //Write to sessionStorage\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n//components\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n//Hook\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>Something went wrong...</div>;\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div>NotFound</div>;\r\n\r\nexport default NotFound;\r\n","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    *{\r\n        box-sizing: border-box;\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);\r\n        }\r\n\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n        } \r\n\r\n        p{\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n`;","import React from \"react\";\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n//components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}